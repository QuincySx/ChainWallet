import com.smallraw.chain.plugin.BuildConfig

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    namespace 'com.smallraw.crypto.core'
    compileSdk BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion

    defaultConfig {
        minSdk BuildConfig.minSdkVersion
        targetSdk BuildConfig.targetSdkVersion

        externalNativeBuild {
            cmake {
                // Sets optional flags for the C compiler.
                cFlags "-fvisibility=hidden -fvisibility-inlines-hidden -ffunction-sections -fdata-sections"
                // Sets optional flags for the C++ compiler.
                cppFlags "-fvisibility=hidden -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -std=c++11"

//                arguments "-DANDROID_TOOLCHAIN=gcc"//设置使用gcc编译，cmake默认使用clang编译
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
}